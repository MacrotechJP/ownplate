rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isSuper(request) {
      return request.auth.token.admin == true
    }

    function isAdmin(request) {
      return request.auth.uid != null && request.auth.token.email != null
    }

    function isUser(request) {
      return request.auth.uid != null && request.auth.token.phone_number != null
    }

    function isOwner(resource, request) {
      return resource.data.uid == request.auth.uid;
    }

    function isRestaurantOwner(restaurantId, request) {
      return get(/databases/$(database)/documents/restaurants/$(restaurantId)).data.uid == request.auth.uid;
    }

    match /users/{userId} {
      allow read, write: if request.auth.uid == userId;
      match /public/{document=**} {
        allow read: if true;
        allow write: if request.auth.uid == userId;
      }
      match /private/{document=**} {
        allow read, write: if request.auth.uid == userId;
        match /profile {
          allow read: if request.auth.uid == userId;
          allow write: if request.auth.uid == userId
            && request.resource.data.phoneNumber == request.auth.token.phone_number;
        }
      }
      match /readonly/{document=**} {
        allow read: if request.auth.uid == userId;
      }
      match /system/{document=**} {
        allow read, write: if false;
      }
    }

    match /admins/{userId} {
      allow read, write: if request.auth.uid == userId;
      allow read: if isSuper(request);
      match /public/{document=**} {
        allow read: if true;
        allow write: if request.auth.uid == userId;
      }
      match /private/{document=**} {
        allow read, write: if request.auth.uid == userId;
        match /profile {
          allow read: if request.auth.uid == userId;
          allow write: if request.auth.uid == userId
            && request.resource.data.email == request.auth.token.email;
        }
      }
      match /readonly/{document=**} {
        allow read: if request.auth.uid == userId;
      }
      match /system/{document=**} {
        allow read, write: if false;
      }
    }

    // Rules for collection group
    match /{path=**}/orders/{orderId} {
      allow read: if isSuper(request);
      allow read: if isOwner(resource, request);
    }
    match /{path=**}/stripeLogs/{logId} {
      allow read: if isSuper(request);
    }

    match /restaurants {
      match /{restaurantId} {
        allow read: if true
        allow create: if isAdmin(request)
                        && request.resource.data.uid == request.auth.uid;
        allow update: if isAdmin(request) && isOwner(resource, request);
        match /private/{privateId} {
          allow read, write: if isAdmin(request) && isRestaurantOwner(restaurantId, request);
        }
        match /menus/{menuId} {
          allow read: if true
          allow write: if isAdmin(request) && isRestaurantOwner(restaurantId, request);
        }
        match /titles/{titleId} {
          allow read: if true
          allow write: if isAdmin(request) && isRestaurantOwner(restaurantId, request);
        }
        match /orders/{orderId} {
          allow read: if isSuper(request);
          allow create: if isUser(request)
                          && request.resource.data.status == 100
                          && request.resource.data.phoneNumber == request.auth.token.phone_number
                          && request.resource.data.uid == request.auth.uid;
          allow read: if isAdmin(request)
                          && isRestaurantOwner(restaurantId, request);
          allow read: if isUser(request) && isOwner(resource, request);
          allow delete: if isOwner(resource, request)
                          && resource.data.status == 200; // validated
          match /system/{document=**} {
            allow read, write: if false;
          }
        }
        match /lines/{lineId} {
          allow read, write: if isRestaurantOwner(restaurantId, request);
        }
        match /trace/{traceId} {
          allow create: if isRestaurantOwner(restaurantId, request)
                          && request.resource.data.restaurantId == restaurantId
                          && request.resource.data.uid == request.auth.uid;
        }
      }
    }

    match /requestList/{restaurantId} {
      allow read, write: if isAdmin(request) && isRestaurantOwner(restaurantId, request);
      allow read: if isSuper(request);
    }

    match /hash/{hashId}{
      match /records/{eventId} {
        allow write: if hashing.sha256(request.auth.token.line).toHexString().lower() == hashId
                      && request.resource.data.uid == hashId;
        allow read: if hashing.sha256(request.auth.token.line).toHexString().lower() == hashId;
      }
    }
    match /{path=**}/records/{eventId} {
        allow read: if isRestaurantOwner(resource.data.restaurantId, request);
    }

    match /{document=**} {
      allow read, write: if false;
    }
  }
}
